//后缀数组
struct Suffix_Array{

	int sa[maxn],rk[maxn],h[maxn],cnt[maxn],x[maxn],y[maxn];

	void build(string s,int m){
		int n = s.size();
		for(int i=1;i<=n;i++){
			x[i] = s[i-1];
			cnt[x[i]]++;
		}
		for(int i=1;i<=m;i++) cnt[i] += cnt[i-1];
		for(int i=n;i>0;i--) sa[cnt[x[i]]--] = i;

		for(int len=1;len<=n;len<<=1){
			int tot=0;
			for(int i=n-len+1;i<=n;i++) y[++tot] = i;
			for(int i=1;i<=n;i++) if(sa[i]>len) y[++tot] = sa[i]-len;

			for(int i=1;i<=m;i++) cnt[i] = 0;
			for(int i=1;i<=n;i++) cnt[x[i]]++;
			for(int i=2;i<=m;i++) cnt[i] += cnt[i-1];
			for(int i=n;i>0;i--){
				sa[cnt[x[y[i]]]--] = y[i];
				y[i] = 0;
			}

			swap(x,y);

			x[sa[1]] = 1;
			tot = 1;
			for(int i=2;i<=n;i++){
				if(y[sa[i]]==y[sa[i-1]]&&y[sa[i]+len]==y[sa[i-1]+len])
					x[sa[i]] = tot;
				else
					x[sa[i]] = ++tot;
			}
			if(tot==n)
				break;
			m = tot;
		}

		for(int i=1;i<=n;i++) rk[sa[i]] = i;

		int k = 0;
		for(int i=1;i<=n;i++){
			if(rk[i]==1)
				continue;
			if(k) k--;
			int j = sa[rk[i]-1];
			while(i+k<=n&&j+k<=n&&s[i+k-1]==s[j+k-1]) k++;
			h[rk[i]] = k;
		}
	}

};